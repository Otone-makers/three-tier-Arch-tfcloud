name: 'AWS Three Tier workflow'

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  id-token: write
  actions: read
  checks: write
  pull-requests: write
  issues: write  # Ensure this is added

jobs:

  tfsec:
    name: tfsec PR commenter
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2  # Fetch the last two commits for accurate context

      - name: tfsec
        uses: tfsec/tfsec-pr-commenter-action@main
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

    - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          aws-region: us-east-2
          role-to-assume: arn:aws:iam::943169211906:role/Githubconnect
          role-session-name: githubworkflowsession
          audience: sts.amazonaws.com

  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    needs: tfsec
    environment: development

    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    - name: Terraform Init
      run: terraform init
      env:
        TF_LOG: ERROR

    - name: Terraform Validate
      run: terraform validate
      env:
        TF_LOG: ERROR
        
    - name: Terraform Plan
      run: terraform plan -input=false -out=tfplan
      env:
        TF_LOG: ERROR

    - name: Save Terraform Plan Output
      if: github.event_name == 'pull_request'
      run: terraform show -json tfplan > plan.json
      env:
        TF_LOG: ERROR

    - name: Create PR Comment with Plan Output
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
            const fs = require('fs');
            const planOutput = fs.readFileSync('plan.json', 'utf8');
            const comment = `### Terraform Plan Result\n\`\`\`json\n${planOutput}\n\`\`\``;
            const issue_number = context.payload.pull_request.number;
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            await github.rest.issues.createComment({
              owner,
              repo,
              issue_number,
              body: comment,
            });

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -auto-approve -input=false
      env:
        TF_LOG: ERROR
        